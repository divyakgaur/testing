name: Docker Build and Push
'on':
  push:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
        
      - name: Assume AWS Role (Dev Account)
        id: assume-dev-role
        run: |
          OUTPUT=$(aws sts assume-role --role-arn "arn:aws:iam::295730835881:role/ECRDevAccessRole" --role-session-name GitHubActions)
            
          echo "::set-output name=AWS_ACCESS_KEY_ID::$(echo $OUTPUT | jq -r '.Credentials.AccessKeyId')"
          echo "::set-output name=AWS_SECRET_ACCESS_KEY::$(echo $OUTPUT | jq -r '.Credentials.SecretAccessKey')"
          echo "::set-output name=AWS_SESSION_TOKEN::$(echo $OUTPUT | jq -r '.Credentials.SessionToken')"
          
      - name: Build Docker image
        run: "docker build -t ${{ secrets.DEV_ECR_REPOSITORY_URI }}:latest ."
        
      - name: Push Docker image to Dev ECR
        run: |
          export AWS_ACCESS_KEY_ID="${{ steps.assume-dev-role.outputs.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ steps.assume-dev-role.outputs.AWS_SECRET_ACCESS_KEY }}"
          export AWS_SESSION_TOKEN="${{ steps.assume-dev-role.outputs.AWS_SESSION_TOKEN }}"
          
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.DEV_ECR_REPOSITORY_URI }}
          
          docker push ${{ secrets.DEV_ECR_REPOSITORY_URI }}:latest
  

      - name: Push Docker image to Prod ECR (Manual)
        if: github.ref == 'refs/heads/main'
        run: |
          export AWS_ACCESS_KEY_ID="${{ steps.assume-dev-role.outputs.AWS_ACCESS_KEY_ID }}"
          export AWS_SECRET_ACCESS_KEY="${{ steps.assume-dev-role.outputs.AWS_SECRET_ACCESS_KEY }}"
          export AWS_SESSION_TOKEN="${{ steps.assume-dev-role.outputs.AWS_SESSION_TOKEN }}"
          
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${{ secrets.PROD_ECR_REPOSITORY_URI }}
          
          docker tag ${{ secrets.DEV_ECR_REPOSITORY_URI }}:latest ${{ secrets.PROD_ECR_REPOSITORY_URI }}:latest
          
          docker push ${{ secrets.PROD_ECR_REPOSITORY_URI }}:latest
